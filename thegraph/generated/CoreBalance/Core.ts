// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class Canceled extends ethereum.Event {
  get params(): Canceled__Params {
    return new Canceled__Params(this);
  }
}

export class Canceled__Params {
  _event: Canceled;

  constructor(event: Canceled) {
    this._event = event;
  }

  get derivativeHash(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }
}

export class Created extends ethereum.Event {
  get params(): Created__Params {
    return new Created__Params(this);
  }
}

export class Created__Params {
  _event: Created;

  constructor(event: Created) {
    this._event = event;
  }

  get buyer(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get seller(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get derivativeHash(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }

  get quantity(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class Executed extends ethereum.Event {
  get params(): Executed__Params {
    return new Executed__Params(this);
  }
}

export class Executed__Params {
  _event: Executed;

  constructor(event: Executed) {
    this._event = event;
  }

  get tokenOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get quantity(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class RegistrySet extends ethereum.Event {
  get params(): RegistrySet__Params {
    return new RegistrySet__Params(this);
  }
}

export class RegistrySet__Params {
  _event: RegistrySet;

  constructor(event: RegistrySet) {
    this._event = event;
  }

  get registry(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Core__getDerivativeHashInput_derivativeStruct extends ethereum.Tuple {
  get margin(): BigInt {
    return this[0].toBigInt();
  }

  get endTime(): BigInt {
    return this[1].toBigInt();
  }

  get params(): Array<BigInt> {
    return this[2].toBigIntArray();
  }

  get oracleId(): Address {
    return this[3].toAddress();
  }

  get token(): Address {
    return this[4].toAddress();
  }

  get syntheticId(): Address {
    return this[5].toAddress();
  }
}

export class Core extends ethereum.SmartContract {
  static bind(address: Address): Core {
    return new Core("Core", address);
  }

  COMMISSION_BASE(): BigInt {
    let result = super.call(
      "COMMISSION_BASE",
      "COMMISSION_BASE():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_COMMISSION_BASE(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "COMMISSION_BASE",
      "COMMISSION_BASE():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  NO_DATA_CANCELLATION_PERIOD(): BigInt {
    let result = super.call(
      "NO_DATA_CANCELLATION_PERIOD",
      "NO_DATA_CANCELLATION_PERIOD():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_NO_DATA_CANCELLATION_PERIOD(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "NO_DATA_CANCELLATION_PERIOD",
      "NO_DATA_CANCELLATION_PERIOD():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  OPIUM_COMMISSION_BASE(): BigInt {
    let result = super.call(
      "OPIUM_COMMISSION_BASE",
      "OPIUM_COMMISSION_BASE():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_OPIUM_COMMISSION_BASE(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "OPIUM_COMMISSION_BASE",
      "OPIUM_COMMISSION_BASE():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  OPIUM_COMMISSION_PART(): BigInt {
    let result = super.call(
      "OPIUM_COMMISSION_PART",
      "OPIUM_COMMISSION_PART():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_OPIUM_COMMISSION_PART(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "OPIUM_COMMISSION_PART",
      "OPIUM_COMMISSION_PART():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  cancelled(param0: Bytes): boolean {
    let result = super.call("cancelled", "cancelled(bytes32):(bool)", [
      ethereum.Value.fromFixedBytes(param0)
    ]);

    return result[0].toBoolean();
  }

  try_cancelled(param0: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall("cancelled", "cancelled(bytes32):(bool)", [
      ethereum.Value.fromFixedBytes(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  feesVaults(param0: Address, param1: Address): BigInt {
    let result = super.call(
      "feesVaults",
      "feesVaults(address,address):(uint256)",
      [ethereum.Value.fromAddress(param0), ethereum.Value.fromAddress(param1)]
    );

    return result[0].toBigInt();
  }

  try_feesVaults(
    param0: Address,
    param1: Address
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "feesVaults",
      "feesVaults(address,address):(uint256)",
      [ethereum.Value.fromAddress(param0), ethereum.Value.fromAddress(param1)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getDerivativeHash(
    _derivative: Core__getDerivativeHashInput_derivativeStruct
  ): Bytes {
    let result = super.call(
      "getDerivativeHash",
      "getDerivativeHash((uint256,uint256,uint256[],address,address,address)):(bytes32)",
      [ethereum.Value.fromTuple(_derivative)]
    );

    return result[0].toBytes();
  }

  try_getDerivativeHash(
    _derivative: Core__getDerivativeHashInput_derivativeStruct
  ): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "getDerivativeHash",
      "getDerivativeHash((uint256,uint256,uint256[],address,address,address)):(bytes32)",
      [ethereum.Value.fromTuple(_derivative)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  getRegistry(): Address {
    let result = super.call("getRegistry", "getRegistry():(address)", []);

    return result[0].toAddress();
  }

  try_getRegistry(): ethereum.CallResult<Address> {
    let result = super.tryCall("getRegistry", "getRegistry():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  poolVaults(param0: Address, param1: Address): BigInt {
    let result = super.call(
      "poolVaults",
      "poolVaults(address,address):(uint256)",
      [ethereum.Value.fromAddress(param0), ethereum.Value.fromAddress(param1)]
    );

    return result[0].toBigInt();
  }

  try_poolVaults(
    param0: Address,
    param1: Address
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "poolVaults",
      "poolVaults(address,address):(uint256)",
      [ethereum.Value.fromAddress(param0), ethereum.Value.fromAddress(param1)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _registry(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class CancelCall extends ethereum.Call {
  get inputs(): CancelCall__Inputs {
    return new CancelCall__Inputs(this);
  }

  get outputs(): CancelCall__Outputs {
    return new CancelCall__Outputs(this);
  }
}

export class CancelCall__Inputs {
  _call: CancelCall;

  constructor(call: CancelCall) {
    this._call = call;
  }

  get _tokenIds(): Array<BigInt> {
    return this._call.inputValues[0].value.toBigIntArray();
  }

  get _quantities(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }

  get _derivatives(): Array<CancelCall_derivativesStruct> {
    return this._call.inputValues[2].value.toTupleArray<
      CancelCall_derivativesStruct
    >();
  }
}

export class CancelCall__Outputs {
  _call: CancelCall;

  constructor(call: CancelCall) {
    this._call = call;
  }
}

export class CancelCall_derivativesStruct extends ethereum.Tuple {
  get margin(): BigInt {
    return this[0].toBigInt();
  }

  get endTime(): BigInt {
    return this[1].toBigInt();
  }

  get params(): Array<BigInt> {
    return this[2].toBigIntArray();
  }

  get oracleId(): Address {
    return this[3].toAddress();
  }

  get token(): Address {
    return this[4].toAddress();
  }

  get syntheticId(): Address {
    return this[5].toAddress();
  }
}

export class Cancel1Call extends ethereum.Call {
  get inputs(): Cancel1Call__Inputs {
    return new Cancel1Call__Inputs(this);
  }

  get outputs(): Cancel1Call__Outputs {
    return new Cancel1Call__Outputs(this);
  }
}

export class Cancel1Call__Inputs {
  _call: Cancel1Call;

  constructor(call: Cancel1Call) {
    this._call = call;
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _quantity(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _derivative(): Cancel1Call_derivativeStruct {
    return this._call.inputValues[2].value.toTuple() as Cancel1Call_derivativeStruct;
  }
}

export class Cancel1Call__Outputs {
  _call: Cancel1Call;

  constructor(call: Cancel1Call) {
    this._call = call;
  }
}

export class Cancel1Call_derivativeStruct extends ethereum.Tuple {
  get margin(): BigInt {
    return this[0].toBigInt();
  }

  get endTime(): BigInt {
    return this[1].toBigInt();
  }

  get params(): Array<BigInt> {
    return this[2].toBigIntArray();
  }

  get oracleId(): Address {
    return this[3].toAddress();
  }

  get token(): Address {
    return this[4].toAddress();
  }

  get syntheticId(): Address {
    return this[5].toAddress();
  }
}

export class CreateCall extends ethereum.Call {
  get inputs(): CreateCall__Inputs {
    return new CreateCall__Inputs(this);
  }

  get outputs(): CreateCall__Outputs {
    return new CreateCall__Outputs(this);
  }
}

export class CreateCall__Inputs {
  _call: CreateCall;

  constructor(call: CreateCall) {
    this._call = call;
  }

  get _derivative(): CreateCall_derivativeStruct {
    return this._call.inputValues[0].value.toTuple() as CreateCall_derivativeStruct;
  }

  get _quantity(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _addresses(): Array<Address> {
    return this._call.inputValues[2].value.toAddressArray();
  }
}

export class CreateCall__Outputs {
  _call: CreateCall;

  constructor(call: CreateCall) {
    this._call = call;
  }
}

export class CreateCall_derivativeStruct extends ethereum.Tuple {
  get margin(): BigInt {
    return this[0].toBigInt();
  }

  get endTime(): BigInt {
    return this[1].toBigInt();
  }

  get params(): Array<BigInt> {
    return this[2].toBigIntArray();
  }

  get oracleId(): Address {
    return this[3].toAddress();
  }

  get token(): Address {
    return this[4].toAddress();
  }

  get syntheticId(): Address {
    return this[5].toAddress();
  }
}

export class ExecuteCall extends ethereum.Call {
  get inputs(): ExecuteCall__Inputs {
    return new ExecuteCall__Inputs(this);
  }

  get outputs(): ExecuteCall__Outputs {
    return new ExecuteCall__Outputs(this);
  }
}

export class ExecuteCall__Inputs {
  _call: ExecuteCall;

  constructor(call: ExecuteCall) {
    this._call = call;
  }

  get _tokenOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _quantity(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _derivative(): ExecuteCall_derivativeStruct {
    return this._call.inputValues[3].value.toTuple() as ExecuteCall_derivativeStruct;
  }
}

export class ExecuteCall__Outputs {
  _call: ExecuteCall;

  constructor(call: ExecuteCall) {
    this._call = call;
  }
}

export class ExecuteCall_derivativeStruct extends ethereum.Tuple {
  get margin(): BigInt {
    return this[0].toBigInt();
  }

  get endTime(): BigInt {
    return this[1].toBigInt();
  }

  get params(): Array<BigInt> {
    return this[2].toBigIntArray();
  }

  get oracleId(): Address {
    return this[3].toAddress();
  }

  get token(): Address {
    return this[4].toAddress();
  }

  get syntheticId(): Address {
    return this[5].toAddress();
  }
}

export class Execute1Call extends ethereum.Call {
  get inputs(): Execute1Call__Inputs {
    return new Execute1Call__Inputs(this);
  }

  get outputs(): Execute1Call__Outputs {
    return new Execute1Call__Outputs(this);
  }
}

export class Execute1Call__Inputs {
  _call: Execute1Call;

  constructor(call: Execute1Call) {
    this._call = call;
  }

  get _tokenOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _tokenIds(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }

  get _quantities(): Array<BigInt> {
    return this._call.inputValues[2].value.toBigIntArray();
  }

  get _derivatives(): Array<Execute1Call_derivativesStruct> {
    return this._call.inputValues[3].value.toTupleArray<
      Execute1Call_derivativesStruct
    >();
  }
}

export class Execute1Call__Outputs {
  _call: Execute1Call;

  constructor(call: Execute1Call) {
    this._call = call;
  }
}

export class Execute1Call_derivativesStruct extends ethereum.Tuple {
  get margin(): BigInt {
    return this[0].toBigInt();
  }

  get endTime(): BigInt {
    return this[1].toBigInt();
  }

  get params(): Array<BigInt> {
    return this[2].toBigIntArray();
  }

  get oracleId(): Address {
    return this[3].toAddress();
  }

  get token(): Address {
    return this[4].toAddress();
  }

  get syntheticId(): Address {
    return this[5].toAddress();
  }
}

export class Execute2Call extends ethereum.Call {
  get inputs(): Execute2Call__Inputs {
    return new Execute2Call__Inputs(this);
  }

  get outputs(): Execute2Call__Outputs {
    return new Execute2Call__Outputs(this);
  }
}

export class Execute2Call__Inputs {
  _call: Execute2Call;

  constructor(call: Execute2Call) {
    this._call = call;
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _quantity(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _derivative(): Execute2Call_derivativeStruct {
    return this._call.inputValues[2].value.toTuple() as Execute2Call_derivativeStruct;
  }
}

export class Execute2Call__Outputs {
  _call: Execute2Call;

  constructor(call: Execute2Call) {
    this._call = call;
  }
}

export class Execute2Call_derivativeStruct extends ethereum.Tuple {
  get margin(): BigInt {
    return this[0].toBigInt();
  }

  get endTime(): BigInt {
    return this[1].toBigInt();
  }

  get params(): Array<BigInt> {
    return this[2].toBigIntArray();
  }

  get oracleId(): Address {
    return this[3].toAddress();
  }

  get token(): Address {
    return this[4].toAddress();
  }

  get syntheticId(): Address {
    return this[5].toAddress();
  }
}

export class Execute3Call extends ethereum.Call {
  get inputs(): Execute3Call__Inputs {
    return new Execute3Call__Inputs(this);
  }

  get outputs(): Execute3Call__Outputs {
    return new Execute3Call__Outputs(this);
  }
}

export class Execute3Call__Inputs {
  _call: Execute3Call;

  constructor(call: Execute3Call) {
    this._call = call;
  }

  get _tokenIds(): Array<BigInt> {
    return this._call.inputValues[0].value.toBigIntArray();
  }

  get _quantities(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }

  get _derivatives(): Array<Execute3Call_derivativesStruct> {
    return this._call.inputValues[2].value.toTupleArray<
      Execute3Call_derivativesStruct
    >();
  }
}

export class Execute3Call__Outputs {
  _call: Execute3Call;

  constructor(call: Execute3Call) {
    this._call = call;
  }
}

export class Execute3Call_derivativesStruct extends ethereum.Tuple {
  get margin(): BigInt {
    return this[0].toBigInt();
  }

  get endTime(): BigInt {
    return this[1].toBigInt();
  }

  get params(): Array<BigInt> {
    return this[2].toBigIntArray();
  }

  get oracleId(): Address {
    return this[3].toAddress();
  }

  get token(): Address {
    return this[4].toAddress();
  }

  get syntheticId(): Address {
    return this[5].toAddress();
  }
}

export class WithdrawFeeCall extends ethereum.Call {
  get inputs(): WithdrawFeeCall__Inputs {
    return new WithdrawFeeCall__Inputs(this);
  }

  get outputs(): WithdrawFeeCall__Outputs {
    return new WithdrawFeeCall__Outputs(this);
  }
}

export class WithdrawFeeCall__Inputs {
  _call: WithdrawFeeCall;

  constructor(call: WithdrawFeeCall) {
    this._call = call;
  }

  get _tokenAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class WithdrawFeeCall__Outputs {
  _call: WithdrawFeeCall;

  constructor(call: WithdrawFeeCall) {
    this._call = call;
  }
}
